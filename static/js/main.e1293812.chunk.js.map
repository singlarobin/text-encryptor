{"version":3,"sources":["components/select/styles.module.css","components/description/styles.module.css","components/error/styles.module.css","components/snackbar/styles.module.css","components/generate/styles.module.css","components/iconButton/styles.module.css","components/page/styles.module.css","components/header/styles.module.css","components/input/styles.module.css","components/button/styles.module.css","components/loader/styles.module.css","components/message/styles.module.css","components/iconButton/index.js","assests/darkModeIcon.js","assests/lightModeIcon.js","utils/index.js","utils/theme.js","components/page/index.js","components/header/index.js","components/constants/index.js","assests/expandIcon.js","components/description/index.js","components/input/index.js","components/select/index.js","components/button/index.js","assests/closeIcon.js","assests/errorIcon.js","assests/infoIcon.js","assests/successIcon.js","assests/warningIcon.js","hooks/useAsyncExec.js","components/snackbar/index.js","components/loader/index.js","components/error/index.js","components/generate/index.js","components/message/index.js","components/errorPage/index.js","components/router/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","IconButton","React","memo","props","children","style","onClick","className","classes","iconButton","DarkModeIcon","height","width","fill","stroke","strokeWidth","xmlns","viewBox","strokeLinecap","strokeLinejoin","d","defaultProps","LightModeIcon","isEmptyString","value","trim","themes","Object","freeze","DARK","LIGHT","getTheme","localStorage","getItem","setTheme","theme","setItem","document","documentElement","setAttribute","themed","lightVal","darkVal","Page","useState","darkMode","setDarkMode","useEffect","loadTheme","currTheme","page","shouldComponentUpdate","Date","getTime","display","alignItems","position","top","right","padding","cursor","Header","headerContent","MESSAGE_API_URL","TIME_UNIT","MINUTE","HOUR","DAY","convertToMilliSeconds","name","hourToMilliSec","VALID_FOR_OPTIONS","MIN_15","MIN_30","HOUR_1","HOUR_3","HOUR_6","HOUR_12","DAY_1","SEVERITY","INFO","WARNING","ERROR","SUCCESS","ExpandIcon","strokeColor","points","Description","showContent","setShowContent","descriptionContainer","descriptionHeading","descriptionLabel","transform","transition","descriptionContent","Input","inputVal","handleInputChange","placeholderValue","rows","inputContent","onChange","e","target","placeholder","Select","validity","handleValidityChange","selectedItem","itemToString","validOptions","toString","isOpen","inputValue","highlightedIndex","getInputProps","getToggleButtonProps","getMenuProps","getItemProps","selectContainer","selectContent","selectInput","selectListContainer","entries","filter","item","toLowerCase","includes","map","index","selectListItem","key","color","Button","buttonContent","CloseIcon","fillColor","ErrorIcon","InfoIcon","SuccessIcon","WarningIcon","useAsyncExec","cb","delay","setTimeout","SnackBar","message","severity","handleClose","timer","setTimer","selectSeverityIcon","useMemo","snackbarContainer","clearTimeout","Loader","loading","loader","Error","error","status","buttonLabel","errorContainer","errorStatus","errorContent","margin","Generate","inputTextVal","setInputTextVal","inputSecretKey","setInputSecretKey","setValidity","setLoading","openSnackbar","setOpenSnackbar","setError","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","fetchResult","setFetchResult","url","setUrl","urlCopied","setUrlCopied","handleInputTextChange","useCallback","handleInputSecretKeyChange","handleSnackbarClose","handleRedirectToHome","openInNewTab","newWindow","window","open","opener","handleEncryption","sendNewMessageRequest","fetch","method","headers","body","JSON","stringify","content","validFor","secretKey","then","res","json","result","data","catch","finally","handleUrlCopy","textToCopy","textArea","createElement","left","appendChild","focus","select","execCommand","err","removeChild","copyText","container","marginTop","urlContent","Message","id","useParams","decryptMessage","setDecryptMessage","handleErrorInResponse","response","history","replace","handleDecryption","fetchMessage","messageContent","ErrorPage","Routing","exact","path","component","App","setRefresher","refresher","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e1293812.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectContainer\":\"styles_selectContainer__2J6aO\",\"selectContent\":\"styles_selectContent__2YgRY\",\"selectInput\":\"styles_selectInput__1_Y3U\",\"selectListContainer\":\"styles_selectListContainer__2h0km\",\"selectListItem\":\"styles_selectListItem__11PkM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionContainer\":\"styles_descriptionContainer__23U9u\",\"descriptionHeading\":\"styles_descriptionHeading__gN2qJ\",\"descriptionLabel\":\"styles_descriptionLabel__25sK3\",\"descriptionContent\":\"styles_descriptionContent__1aMeQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorContainer\":\"styles_errorContainer__3sMBV\",\"errorStatus\":\"styles_errorStatus__2kJqV\",\"errorContent\":\"styles_errorContent__3Z7ON\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snackbarContainer\":\"styles_snackbarContainer__1SpBV\",\"message\":\"styles_message__2dawB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__344pv\",\"buttonContainer\":\"styles_buttonContainer__DxwJB\",\"urlContent\":\"styles_urlContent__YrOVe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconButton\":\"styles_iconButton__3lGUI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"styles_page__229xo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContent\":\"styles_headerContent__1hAlc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContent\":\"styles_inputContent__X9QFY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContent\":\"styles_buttonContent__38_um\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"styles_loader__3QW4r\",\"changeSize\":\"styles_changeSize__8-IZj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageContent\":\"styles_messageContent__1SmNT\"};","import React from 'react';\nimport classes from './styles.module.css';\n\nconst IconButton = React.memo(props => {\n    const { children, style, onClick } = props;\n\n    return <button className={classes.iconButton} style={style} onClick={onClick}>{children}</button>;\n});\n\nexport default IconButton;","const DarkModeIcon = props => {\n    const { height, width, fill, stroke, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24'>\n        <path fill={fill} stroke={stroke} strokeWidth={strokeWidth} strokeLinecap='round' strokeLinejoin='round'\n            d={`M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z`} />\n    </svg>;\n};\n\nexport default DarkModeIcon;\n\nDarkModeIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fill: 'none',\n    stroke: '#f7f7f7',\n    strokeWidth: 1.5,\n};\n","const LightModeIcon = props => {\n    const { height, width, fill, stroke, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24'\n        fill={fill} stroke={stroke} strokeWidth={strokeWidth} strokeLinecap='round' strokeLinejoin='round'>\n        <path fill='none' stroke='none' d='M0 0h24v24H0z' />\n        <path d='M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z' />\n        <path d='M17 4a2 2 0 0 0 2 2a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2a2 2 0 0 0 2 -2' />\n        <path d='M19 11h2m-1 -1v2' />\n    </svg>;\n};\n\nexport default LightModeIcon;\n\nLightModeIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fill: 'none',\n    stroke: '#666',\n    strokeWidth: 1.5,\n};","const isEmptyString = value => !value || (typeof value === 'string' && value.trim() === '');\n\nconst copyText = (textToCopy) => {\n    let textArea = document.createElement('textarea');\n    let error = null;\n    textArea.value = textToCopy;\n    textArea.style.top = '0';\n    textArea.style.left = '0';\n    textArea.style.position = 'fixed';\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n    try {\n        document.execCommand('copy');\n    } catch (err) {\n        error = err;\n    }\n    document.body.removeChild(textArea);\n    return error;\n};\n\nexport {\n    isEmptyString,\n    copyText\n};\n","import { isEmptyString } from './index';\n\nexport const themes = Object.freeze({\n    DARK: 'dark',\n    LIGHT: 'light',\n});\n\nexport const getTheme = () => {\n    const theme = !isEmptyString(localStorage.getItem('swooshTheme')) ?\n        localStorage.getItem('swooshTheme') : themes.LIGHT;\n    return theme;\n};\n\nexport const setTheme = theme => {\n    localStorage.setItem('swooshTheme', theme);\n    document.documentElement.setAttribute('theme-mode', theme);\n};\n\nexport const themed = (lightVal, darkVal) => getTheme() === themes.LIGHT ? lightVal : darkVal;","import { useEffect, useState } from 'react';\nimport IconButton from '../iconButton';\nimport classes from './styles.module.css';\nimport DarkModeIcon from '../../assests/darkModeIcon';\nimport LightModeIcon from '../../assests/lightModeIcon';\nimport { themes, getTheme, setTheme } from '../../utils/theme';\n\n\nconst Page = props => {\n    const [darkMode, setDarkMode] = useState(false);\n\n    useEffect(() => loadTheme(), []);\n\n    const loadTheme = () => {\n        const currTheme = getTheme();\n        setDarkMode(currTheme === themes.DARK);\n        setTheme(currTheme);\n    };\n    const handleThemeChange = () => {\n        const currTheme = getTheme();\n        setDarkMode(currTheme !== themes.DARK );\n        setTheme(currTheme === themes.DARK ? themes.LIGHT : themes.DARK);\n        if (typeof props.shouldComponentUpdate === 'function') props.shouldComponentUpdate(new Date().getTime());\n    };\n\n    return <div className={classes.page} >\n        <IconButton onClick={handleThemeChange}\n            style={{\n                display: 'flex',\n                alignItems: 'center',\n                position: 'absolute',\n                top: '16px',\n                right: '16px',\n                padding: '0rem',\n                cursor: 'pointer',\n            }}>\n            {darkMode ? <DarkModeIcon /> : <LightModeIcon />}\n        </IconButton>\n        {props.children}\n    </div>;\n};\n\nexport default Page;","import classes from './styles.module.css';\n\nconst Header = () => {\n    return <div className={classes.headerContent}>Sw<span>oo</span>sh</div>;\n\n};\n\nexport default Header;","const DESCRIPTION_VALUE = `Excepteur pariatur nulla in ulla\nmco aliqua ea cupidatat incididunt proident culpa sint non exercitation deserunt dolor.`;\n\nconst MESSAGE_API_URL = 'http://localhost:5050/api/v1/messages/';\n\nconst TIME_UNIT = Object.freeze({\n    MINUTE: 'Minute',\n    HOUR: 'Hour',\n    DAY: 'Day'\n});\n\nconst convertToMilliSeconds = (name, value) => {\n    const minToMilliSec = 60 * 1000;\n    const hourToMilliSec = 60 * minToMilliSec;\n    const dayToMilliSec = 24 * hourToMilliSec;\n\n    switch (name) {\n    case TIME_UNIT.MINUTE:\n        return value * minToMilliSec;\n    case TIME_UNIT.HOUR:\n        return value * hourToMilliSec;\n    case TIME_UNIT.DAY:\n        return value * dayToMilliSec;\n    }\n};\n\nconst VALID_FOR_OPTIONS = Object.freeze({\n    MIN_15: { 'name': '15 Minutes', 'value': convertToMilliSeconds(TIME_UNIT.MINUTE, 15) }, //Value is in milliseconds\n    MIN_30: { 'name': '30 Minutes', 'value': convertToMilliSeconds(TIME_UNIT.MINUTE, 30) },\n    HOUR_1: { 'name': '1 Hour', 'value': convertToMilliSeconds(TIME_UNIT.HOUR, 1) },\n    HOUR_3: { 'name': '3 Hours', 'value': convertToMilliSeconds(TIME_UNIT.HOUR, 3) },\n    HOUR_6: { 'name': '6 Hours', 'value': convertToMilliSeconds(TIME_UNIT.HOUR, 6) },\n    HOUR_12: { 'name': '12 Hours', 'value': convertToMilliSeconds(TIME_UNIT.HOUR, 12) },\n    DAY_1: { 'name': '1 Day', 'value': convertToMilliSeconds(TIME_UNIT.DAY, 1) }\n});\n\nconst SEVERITY = Object.freeze({\n    INFO: 1,\n    WARNING: 2,\n    ERROR: 3,\n    SUCCESS: 4\n});\n\nexport {\n    DESCRIPTION_VALUE,\n    MESSAGE_API_URL,\n    TIME_UNIT,\n    VALID_FOR_OPTIONS,\n    SEVERITY\n};","const ExpandIcon = props => {\n    const { height, width, fill, strokeColor, strokeWidth, style } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' style={style} height={height} width={width} viewBox='0 0 24 24'\n        fill={fill} stroke={strokeColor} strokeWidth={strokeWidth} strokeLinecap='round' strokeLinejoin='round'>\n        <path fill='none' stroke='none' d='M0 0h24v24H0z' />\n        <polyline points='6 9 12 15 18 9' />\n    </svg>;\n};\n\nexport default ExpandIcon;\n\nExpandIcon.defaultProps = {\n    height: '1rem',\n    width: '1rem',\n    fill: 'none',\n    strokeColor: '#666',\n    strokeWidth: 1.5,\n};","import classes from './styles.module.css';\nimport { DESCRIPTION_VALUE } from '../constants';\nimport IconButton from '../iconButton';\nimport ExpandIcon from '../../assests/expandIcon';\nimport { useState } from 'react';\nimport { themed } from '../../utils/theme';\n\nconst Description = () => {\n    const [showContent, setShowContent] = useState(false);\n\n    const handleShowContent = () => setShowContent(!showContent);\n\n    return <div className={classes.descriptionContainer}>\n        <div className={classes.descriptionHeading}>\n            <div className={classes.descriptionLabel}>How it Works?</div>\n            <IconButton onClick={handleShowContent}\n                style={{\n                    padding: '0rem',\n                    cursor: 'pointer',\n                }}>\n                <ExpandIcon strokeColor={themed('#666', '#f7f7f7')}\n                    style={{\n                        transform: showContent ? 'rotate(180deg)' : 'rotate(0)',\n                        transition: 'transform 0.5s ease-in-out'\n                    }} />\n            </IconButton>\n        </div>\n        {showContent && <p className={classes.descriptionContent}>{DESCRIPTION_VALUE}</p>}\n    </div>;\n};\n\nexport default Description;","import React from 'react';\nimport classes from './styles.module.css';\n\nconst Input = React.memo(props => {\n    const { inputVal, handleInputChange, placeholderValue, rows, style } = props;\n    const handleChange = e => handleInputChange(e.target.value);\n\n    return <textarea className={classes.inputContent} style={style} onChange={handleChange}\n        placeholder={placeholderValue} rows={rows} value={inputVal} />;\n});\n\nexport default Input;","import Downshift from 'downshift';\nimport IconButton from '../iconButton';\nimport ExpandIcon from '../../assests/expandIcon';\nimport classes from './styles.module.css';\nimport { VALID_FOR_OPTIONS } from '../constants';\nimport { themed } from '../../utils/theme';\nimport { isEmptyString } from '../../utils';\n\nconst Select = props => {\n    const { validity, handleValidityChange } = props;\n\n    return <Downshift onChange={e => handleValidityChange(e)} selectedItem={validity}\n        itemToString={validOptions => validOptions ? validOptions.name.toString() : ''}>\n        {({\n            isOpen,\n            inputValue,\n            selectedItem,\n            highlightedIndex,\n            getInputProps,\n            getToggleButtonProps,\n            getMenuProps,\n            getItemProps,\n        }) => (<div className={classes.selectContainer}>\n            <div className={classes.selectContent}>\n                <input className={classes.selectInput} {...getInputProps({\n                    placeholder: 'Validity Duration',\n                    value: inputValue,\n                })} />\n                <IconButton {...getToggleButtonProps()} style={{\n                    padding: '0rem',\n                    cursor: 'pointer',\n                }}>\n                    <ExpandIcon strokeColor={themed('#666', '#f7f7f7')}\n                        style={{\n                            transform: isOpen ? 'rotate(180deg)' : 'rotate(0)',\n                            transition: 'transform 0.5s ease-in-out'\n                        }} />\n                </IconButton>\n            </div>\n            {isOpen ? <div className={classes.selectListContainer} {...getMenuProps()}>\n                {Object.entries(VALID_FOR_OPTIONS)\n                    .filter(item => isEmptyString(inputValue) ||\n                        item[1].name.toLowerCase().includes(inputValue.toLowerCase()))\n                    .map((item, index) =>\n                        <div className={classes.selectListItem}\n                            {...getItemProps({\n                                item: item[1],\n                                index,\n                                key: index,\n                            })}\n                            style={{\n                                color: selectedItem === item[1] && '#36b6ab',\n                                filter: highlightedIndex === index && 'brightness(90%)'\n                            }}>\n                            {item[1].name}\n                        </div>)}\n            </div> : null}\n        </div>)}\n    </Downshift>;\n};\n\nexport default Select;","import React from 'react';\nimport classes from './styles.module.css';\n\nconst Button = React.memo(props => {\n    const { children, style, onClick } = props;\n\n    return <button className={classes.buttonContent} style={style} onClick={onClick}>{children}</button>;\n});\n\nexport default Button;","const CloseIcon = props => {\n    const { height, width, fillColor, strokeColor, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24'>\n        <path fill={fillColor} stroke={strokeColor} strokeWidth={strokeWidth} d='M6 18L18 6M6 6l12 12' />\n    </svg>;\n};\n\nexport default CloseIcon;\n\nCloseIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fillColor: 'none',\n    strokeColor: '#fff',\n    strokeWidth: 1.5,\n};","const ErrorIcon = props => {\n    const { height, width, fillColor, strokeColor, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24' >\n        <path fill={fillColor} stroke={strokeColor} strokeWidth={strokeWidth} strokeLinecap='round'\n            strokeLinejoin='round' d='M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z' />\n    </svg>;\n};\n\nexport default ErrorIcon;\n\nErrorIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fillColor: 'none',\n    strokeColor: '#fff',\n    strokeWidth: 1.5,\n};","const InfoIcon = props => {\n    const { height, width, fillColor, strokeColor, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24' >\n        <path fill={fillColor} stroke={strokeColor} strokeWidth={strokeWidth} strokeLinecap='round'\n            strokeLinejoin='round' d='M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z' />\n    </svg>;\n};\n\nexport default InfoIcon;\n\nInfoIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fillColor: 'none',\n    strokeColor: '#fff',\n    strokeWidth: 1.5,\n};","const SuccessIcon = props => {\n    const { height, width, fillColor, strokeColor, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24'\n        fill={fillColor} stroke={strokeColor} strokeWidth={strokeWidth} >\n        <polyline points='9 11 12 14 20 6' />\n        <path d='M20 12v6a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h9' />\n    </svg>;\n};\n\nexport default SuccessIcon;\n\nSuccessIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fillColor: 'none',\n    strokeColor: '#fff',\n    strokeWidth: 1.5,\n};","const WarningIcon = props => {\n    const { height, width, fillColor, strokeColor, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24'>\n        <path fill={fillColor} stroke={strokeColor} strokeWidth={strokeWidth}\n            strokeLinecap='round' strokeLinejoin='round'\n            d={`M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z`} />\n    </svg>;\n};\n\nexport default WarningIcon;\n\nWarningIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fillColor: 'none',\n    strokeColor: '#fff',\n    strokeWidth: 1.5,\n};","const useAsyncExec = (cb, delay) => {\n    const id = setTimeout(cb, delay);\n    return id;\n};\n\nexport default useAsyncExec;\n\nuseAsyncExec.defaultProps = { delay: 0 };","import { useState } from 'react';\nimport { useMemo, useEffect } from 'react';\nimport classes from './styles.module.css';\nimport IconButton from '../iconButton';\nimport CloseIcon from '../../assests/closeIcon';\nimport ErrorIcon from '../../assests/errorIcon';\nimport InfoIcon from '../../assests/infoIcon';\nimport SuccessIcon from '../../assests/successIcon';\nimport WarningIcon from '../../assests/warningIcon';\nimport { SEVERITY } from '../constants';\nimport useAsyncExec from '../../hooks/useAsyncExec';\n\nconst SnackBar = props => {\n    const { message, severity, handleClose } = props;\n    const [timer, setTimer] = useState(0);\n\n    useEffect(() => setTimer(useAsyncExec(handleClose, 3000)), []);\n\n    const snackbarClose = () => {\n        clearTimeout(timer);\n        handleClose();\n    };\n\n    const selectSeverityIcon = useMemo(() => {\n        switch (severity) {\n        case SEVERITY.INFO:\n            return <InfoIcon />;\n        case SEVERITY.WARNING:\n            return <WarningIcon />;\n        case SEVERITY.ERROR:\n            return <ErrorIcon />;\n        default:\n            return <SuccessIcon />;\n        }\n    }, [severity]);\n\n    return <div className={classes.snackbarContainer}>\n        {selectSeverityIcon}\n        <div className={classes.message}>{message}</div>\n        <IconButton  onClick={snackbarClose}\n            style={{\n                padding: '0rem',\n                cursor: 'pointer',\n            }}>\n            <CloseIcon />\n        </IconButton>\n    </div>;\n};\n\nexport default SnackBar;","import classes from './styles.module.css';\nimport { Fragment } from 'react';\n\nconst Loader = props => {\n    const { loading } = props;\n    return <Fragment>\n        {loading ? <div className={classes.loader} />\n            : null}\n    </Fragment>;\n};\n\nexport default Loader;","import { Fragment } from 'react';\nimport classes from './styles.module.css';\nimport Button from '../button';\n\nconst Error = props => {\n    const { error: { message, status }, buttonLabel, onClick } = props;\n\n    return <Fragment>\n        <div className={classes.errorContainer}>\n            <div className={classes.errorStatus}>{status}</div>\n            <div className={classes.errorContent}>\n                {message}\n                <br />\n                Click on the button below to create a message.\n            </div>\n        </div>\n        {typeof onClick === 'function' &&\n            <Button onClick={onClick}\n                style={{ margin: '1rem auto', padding: '0.5rem 0.75rem' }}>\n                {buttonLabel}\n            </Button>}\n    </Fragment>;\n};\n\nexport default Error;\n","import { useState, useCallback, Fragment, useEffect } from 'react';\nimport Input from '../input';\nimport Select from '../select';\nimport Button from '../button';\nimport SnackBar from '../snackbar';\nimport Loader from '../loader';\nimport Error from '../error';\nimport classes from './styles.module.css';\nimport { isEmptyString, copyText } from '../../utils';\nimport { SEVERITY, MESSAGE_API_URL, VALID_FOR_OPTIONS } from '../constants';\nimport useAsyncExec from '../../hooks/useAsyncExec';\n\nconst Generate = () => {\n    const [inputTextVal, setInputTextVal] = useState('');\n    const [inputSecretKey, setInputSecretKey] = useState('');\n    const [validity, setValidity] = useState(VALID_FOR_OPTIONS.MIN_15);\n    const [loading, setLoading] = useState(false);\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [error, setError] = useState(null);\n    const [snackbarMessage, setSnackbarMessage] = useState('');\n    const [snackbarSeverity, setSnackbarSeverity] = useState(SEVERITY.INFO);\n    const [fetchResult, setFetchResult] = useState(false);\n    const [url, setUrl] = useState('');\n    const [urlCopied, setUrlCopied] = useState(false);\n\n    const handleInputTextChange = useCallback(value => setInputTextVal(value), []);\n    const handleInputSecretKeyChange = useCallback(value => setInputSecretKey(value), []);\n    const handleValidityChange = useCallback(value => setValidity(value), []);\n    const handleSnackbarClose = useCallback(() => setOpenSnackbar(false), []);\n    const handleRedirectToHome = useCallback(() => {\n        setError(null);\n        setUrl('');\n    }, []);\n\n    const openInNewTab = useCallback(() => {\n        const newWindow = window.open(url, '_blank', 'noopener,noreferrer');\n        if (newWindow) newWindow.opener = null;\n    }, [url]);\n\n    const handleEncryption = useCallback(() => {\n        const message = (isEmptyString(inputTextVal) || isEmptyString(inputSecretKey) || isEmptyString(validity)) ?\n            'Missing either Text to Encrypt or Secret Key or Validity Duration!' : '';\n        const severity = (isEmptyString(inputTextVal) || isEmptyString(inputSecretKey)) && SEVERITY.INFO;\n        setSnackbarMessage(message);\n        setSnackbarSeverity(severity);\n        setOpenSnackbar(!isEmptyString(message));\n        setFetchResult(isEmptyString(message) ? true : false);\n        useAsyncExec(() => {\n            setFetchResult(false);\n            handleInputTextChange('');\n            handleInputSecretKeyChange('');\n            handleValidityChange(VALID_FOR_OPTIONS.MIN_15);\n        });\n    }, [inputTextVal, inputSecretKey, validity]);\n\n    const sendNewMessageRequest = useCallback(() => {\n        setLoading(true);\n        fetch(MESSAGE_API_URL, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                content: inputTextVal,\n                validFor: validity.value,\n                secretKey: inputSecretKey\n            })\n        })\n            .then(res => res.json())\n            .then(result => {\n                if (result.error) {\n                    setError({ message: result.error.message, status: result.status });\n                }\n                setUrl(result.data?.url || '');\n            })\n            .catch(error => {\n                setError({ message: error.message, status: '500' });\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, [inputTextVal, inputSecretKey, validity]);\n\n    useEffect(() => fetchResult && sendNewMessageRequest(), [fetchResult, sendNewMessageRequest]);\n\n    const handleUrlCopy = useCallback(() => {\n        if (isEmptyString(url)) return;\n        if (!isEmptyString(copyText(url))) return;\n        setUrlCopied(true);\n        useAsyncExec(() => setUrlCopied(false), 2000);\n    }, [url]);\n\n    return <Fragment>\n        {!isEmptyString(error) ?\n            <Error error={error} buttonLabel={`Create Message`} onClick={handleRedirectToHome} />\n            : <Fragment>\n                {isEmptyString(url) ? <Fragment>\n                    <Input inputVal={inputTextVal} handleInputChange={handleInputTextChange}\n                        placeholderValue='Enter Text' rows={4} />\n                    <div className={classes.container}>\n                        <Input inputVal={inputSecretKey} handleInputChange={handleInputSecretKeyChange}\n                            placeholderValue='Enter Secret Key' rows={1}\n                            style={{ marginTop: '0rem' }} />\n                        <Select validity={validity} handleValidityChange={handleValidityChange} />\n                    </div>\n                    <Button onClick={handleEncryption} style={{ margin: '1rem auto', padding: '0.5rem 0.75rem' }}>\n                        Encrypt\n                    </Button>\n                </Fragment> : <Fragment>\n                    <p className={classes.urlContent} onClick={openInNewTab}> {url} </p>\n                    <Button onClick={handleUrlCopy} style={{ margin: '0 auto', padding: '0.25rem 0.5rem' }}>\n                        Cop{urlCopied ? 'ied!' : 'y'}\n                    </Button>\n                    <Button onClick={handleRedirectToHome} style={{ margin: '1rem auto', padding: '0.5rem 0.75rem' }}>\n                        Create Message\n                    </Button>\n                </Fragment>}\n            </Fragment>}\n        <Loader loading={loading} />\n        {openSnackbar &&\n            <SnackBar message={snackbarMessage} severity={snackbarSeverity} handleClose={handleSnackbarClose} />}\n    </Fragment>;\n};\n\nexport default Generate;","import classes from './styles.module.css';\nimport { Fragment, useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Button from '../button';\nimport Input from '../input';\nimport SnackBar from '../snackbar';\nimport Loader from '../loader';\nimport Error from '../error';\nimport { isEmptyString } from '../../utils';\nimport { SEVERITY } from '../constants';\nimport { MESSAGE_API_URL } from '../constants';\nimport useAsyncExec from '../../hooks/useAsyncExec';\n\nconst Message = props => {\n    const { id } = useParams();\n    const [url, setUrl] = useState(MESSAGE_API_URL);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [decryptMessage, setDecryptMessage] = useState('');\n    const [inputSecretKey, setInputSecretKey] = useState('');\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState('');\n    const [snackbarSeverity, setSnackbarSeverity] = useState(SEVERITY.INFO);\n    const [fetchResult, setFetchResult] = useState(false);\n\n    const handleErrorInResponse = useCallback(result => {\n        setError({ message: result.error.message, status: result.status });\n    }, []);\n\n    useEffect(() => {\n        //Check if id exists or not\n        setLoading(true);\n        fetch(url + id)\n            .then(response => response.json())\n            .then(result => {\n                if (!isEmptyString(result.error)) handleErrorInResponse(result);\n                setUrl(result.data ? url + id + '/decrypt' : url);\n            })\n            .catch(error => {\n                setError({ message: error.message, status: '500' });\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, []);\n\n    const handleInputSecretKeyChange = useCallback(value => setInputSecretKey(value), []);\n    const handleSnackbarClose = useCallback(() => setOpenSnackbar(false), []);\n    const handleRedirectToHome = useCallback(() => props.history.replace('/'), []);\n\n    const handleDecryption = useCallback(() => {\n        const message = isEmptyString(inputSecretKey) ? 'Missing Secret Key!' : '';\n        const severity = isEmptyString(inputSecretKey) && SEVERITY.INFO;\n        setSnackbarMessage(message);\n        setSnackbarSeverity(severity);\n        setOpenSnackbar(!isEmptyString(message));\n        setFetchResult(isEmptyString(message) ? true : false);\n        useAsyncExec(() => {\n            setFetchResult(false);\n            handleInputSecretKeyChange('');\n        });\n    }, [inputSecretKey]);\n\n    const fetchMessage = useCallback(() => {\n        setLoading(true);\n        fetch(url + '?secretKey=' + inputSecretKey)\n            .then(response => response.json())\n            .then(result => {\n                if (!isEmptyString(result.error)) handleErrorInResponse(result);\n                setDecryptMessage(result.data?.message || '');\n            })\n            .catch(error => {\n                setError({ message: error.message, status: '500' });\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, [url, inputSecretKey]);\n\n    useEffect(() => fetchResult && fetchMessage(), [fetchResult, fetchMessage]);\n\n    return <Fragment>\n        {!isEmptyString(error) ? <Fragment>\n            <Error error={error} buttonLabel={`Create Message`} onClick={handleRedirectToHome} />\n        </Fragment> : <Fragment>\n            {isEmptyString(decryptMessage) ? <Fragment>\n                <Input inputVal={inputSecretKey} placeholderValue='Enter Secret Key' rows={1}\n                    handleInputChange={handleInputSecretKeyChange} />\n                <Button onClick={handleDecryption}\n                    style={{ margin: '1rem auto', padding: '0.5rem 0.75rem' }}>\n                    Decrypt\n                </Button>\n            </Fragment> : <Fragment>\n                <p className={classes.messageContent}> {decryptMessage} </p>\n                <Button onClick={handleRedirectToHome}\n                    style={{ margin: '1rem auto', padding: '0.5rem 0.75rem' }}>\n                    Create Message\n                </Button>\n            </Fragment>}\n            <Loader loading={loading} />\n            {openSnackbar &&\n                <SnackBar message={snackbarMessage} severity={snackbarSeverity} handleClose={handleSnackbarClose} />}\n        </Fragment>}\n    </Fragment>;\n};\n\nexport default Message;","import Error from '../error';\nimport { useCallback } from 'react';\n\nconst ErrorPage = props => {\n    const error = { message: 'Page Not Found!', status: '404' };\n    const buttonName = 'Create Message';\n    const handleRedirectToHome = useCallback(() => props.history.replace('/'), []);\n\n    return <Error error={error} buttonLabel={buttonName} onClick={handleRedirectToHome} />;\n};\n\nexport default ErrorPage;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from '../header';\nimport Description from '../description';\nimport Generate from '../generate';\nimport Message from '../message';\nimport ErrorPage from '../errorPage';\n\nconst Routing = () => {\n    return <Router>\n        <Header />\n        <Description />\n        <Switch>\n            <Route exact path='/' component={Generate} />\n            <Route exact path='/messages/:id' component={Message} />\n            <Route path='*' component={ErrorPage} />\n        </Switch>\n    </Router>;\n};\n\nexport default Routing;","import { useState } from 'react';\nimport './App.css';\nimport Page from './components/page';\nimport Routing from './components/router';\n\nconst App = () => {\n    const [, setRefresher] = useState();\n\n    const updateComponent = (refresher = null) => refresher && setRefresher(refresher);\n\n    return <Page shouldComponentUpdate={updateComponent}>\n        <div className='appContainer'><Routing /></div>\n    </Page>;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}