{"version":3,"sources":["components/select/styles.module.css","components/generate/styles.module.css","components/error/styles.module.css","components/description/styles.module.css","components/page/styles.module.css","components/message/styles.module.css","components/input/styles.module.css","components/snackbar/styles.module.css","components/iconButton/styles.module.css","components/header/styles.module.css","components/button/styles.module.css","components/loader/styles.module.css","components/iconButton/index.js","assets/darkModeIcon.js","assets/lightModeIcon.js","utils/index.js","utils/theme.js","components/page/index.js","components/header/index.js","components/input/index.js","assets/expandIcon.js","components/constants/index.js","components/select/index.js","components/button/index.js","assets/closeIcon.js","assets/errorIcon.js","assets/infoIcon.js","assets/successIcon.js","assets/warningIcon.js","hooks/useAsyncExec.js","components/snackbar/index.js","components/loader/index.js","components/error/index.js","components/description/index.js","assets/clipboardChecked.js","assets/clipboard.js","components/generate/index.js","components/message/index.js","components/errorPage/index.js","components/router/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","IconButton","React","memo","props","children","style","onClick","className","classes","iconButton","DarkModeIcon","height","width","fill","stroke","strokeWidth","xmlns","viewBox","strokeLinecap","strokeLinejoin","d","defaultProps","LightModeIcon","isEmptyString","value","trim","themes","Object","freeze","DARK","LIGHT","getTheme","localStorage","getItem","setTheme","theme","setItem","document","documentElement","setAttribute","themed","lightVal","darkVal","Page","useState","darkMode","setDarkMode","useEffect","loadTheme","currTheme","page","pageBackground","pageContent","shouldComponentUpdate","Date","getTime","display","alignItems","position","top","right","Header","headerContent","Input","inputVal","handleInputChange","placeholderValue","rows","handleChange","e","target","inputContent","onChange","placeholder","ExpandIcon","strokeColor","points","MESSAGE_API_URL","TIME_UNIT","MINUTE","HOUR","DAY","convertToMilliSeconds","name","hourToMilliSec","VALID_FOR_OPTIONS","MIN_15","MIN_30","HOUR_1","HOUR_3","HOUR_6","HOUR_12","DAY_1","SEVERITY","INFO","WARNING","ERROR","SUCCESS","Select","validity","handleValidityChange","selectedItem","itemToString","validOptions","toString","isOpen","inputValue","highlightedIndex","getInputProps","getToggleButtonProps","getMenuProps","getItemProps","selectContainer","selectContent","selectInput","transform","transition","selectListContainer","entries","filter","item","toLowerCase","includes","map","index","selectListItem","key","color","backgroundColor","Button","buttonContent","CloseIcon","fillColor","ErrorIcon","InfoIcon","SuccessIcon","WarningIcon","useAsyncExec","cb","delay","setTimeout","SnackBar","message","severity","handleClose","timer","setTimer","selectSeverityIcon","useMemo","snackbarContainer","clearTimeout","Loader","loading","loader","Error","error","status","buttonLabel","errorWrapper","errorContainer","errorStatus","errorContent","Description","showContent","setShowContent","descriptionContainer","descriptionHeading","descriptionLabel","justifyContent","descriptionContent","ClipBoardChecked","x","y","rx","ClipBoard","Generate","inputTextVal","setInputTextVal","inputSecretKey","setInputSecretKey","setValidity","setLoading","openSnackbar","setOpenSnackbar","setError","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","fetchResult","setFetchResult","url","setUrl","urlCopied","setUrlCopied","handleInputTextChange","useCallback","handleInputSecretKeyChange","handleSnackbarClose","handleReset","openInNewTab","newWindow","window","open","opener","handleEncryption","sendNewMessageRequest","fetch","method","headers","body","JSON","stringify","content","validFor","secretKey","then","res","json","result","data","catch","finally","handleUrlCopy","textToCopy","textArea","createElement","left","appendChild","focus","select","execCommand","err","removeChild","copyText","generatorContainer","container","flex","urlContent","urlText","Message","id","useParams","decryptMessage","setDecryptMessage","handleErrorInResponse","handleRedirectToHome","history","replace","handleDecryption","fetchMessage","response","messageContent","ErrorPage","Routing","exact","path","component","App","setRefresher","refresher","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2579750b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectContainer\":\"styles_selectContainer__2J6aO\",\"selectContent\":\"styles_selectContent__2YgRY\",\"selectInput\":\"styles_selectInput__1_Y3U\",\"selectListContainer\":\"styles_selectListContainer__2h0km\",\"selectListItem\":\"styles_selectListItem__11PkM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"generatorContainer\":\"styles_generatorContainer__LhFWX\",\"container\":\"styles_container__344pv\",\"urlContent\":\"styles_urlContent__YrOVe\",\"urlText\":\"styles_urlText__27DED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorWrapper\":\"styles_errorWrapper__XRRln\",\"errorContainer\":\"styles_errorContainer__3sMBV\",\"errorStatus\":\"styles_errorStatus__2kJqV\",\"errorContent\":\"styles_errorContent__3Z7ON\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionContainer\":\"styles_descriptionContainer__23U9u\",\"descriptionHeading\":\"styles_descriptionHeading__gN2qJ\",\"descriptionLabel\":\"styles_descriptionLabel__25sK3\",\"descriptionContent\":\"styles_descriptionContent__1aMeQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"styles_page__229xo\",\"pageBackground\":\"styles_pageBackground__1NayQ\",\"pageContent\":\"styles_pageContent__3ywP6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageContent\":\"styles_messageContent__1SmNT\",\"container\":\"styles_container__1T7HA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContent\":\"styles_inputContent__X9QFY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snackbarContainer\":\"styles_snackbarContainer__1SpBV\",\"message\":\"styles_message__2dawB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconButton\":\"styles_iconButton__3lGUI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContent\":\"styles_headerContent__1hAlc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContent\":\"styles_buttonContent__38_um\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"styles_loader__3QW4r\",\"changeSize\":\"styles_changeSize__8-IZj\"};","import React from 'react';\nimport classes from './styles.module.css';\n\nconst IconButton = React.memo(props => {\n    const { children, style, onClick } = props;\n\n    return <button className={classes.iconButton} style={style} onClick={onClick}>{children}</button>;\n});\n\nexport default IconButton;","const DarkModeIcon = props => {\n    const { height, width, fill, stroke, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24'>\n        <path fill={fill} stroke={stroke} strokeWidth={strokeWidth} strokeLinecap='round' strokeLinejoin='round'\n            d={`M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z`} />\n    </svg>;\n};\n\nexport default DarkModeIcon;\n\nDarkModeIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fill: 'none',\n    stroke: '#f7f7f7',\n    strokeWidth: 1.5,\n};\n","const LightModeIcon = props => {\n    const { height, width, fill, stroke, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24'\n        fill={fill} stroke={stroke} strokeWidth={strokeWidth} strokeLinecap='round' strokeLinejoin='round'>\n        <path fill='none' stroke='none' d='M0 0h24v24H0z' />\n        <path d='M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z' />\n        <path d='M17 4a2 2 0 0 0 2 2a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2a2 2 0 0 0 2 -2' />\n        <path d='M19 11h2m-1 -1v2' />\n    </svg>;\n};\n\nexport default LightModeIcon;\n\nLightModeIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fill: 'none',\n    stroke: '#666',\n    strokeWidth: 1.5,\n};","const isEmptyString = value => !value || (typeof value === 'string' && value.trim() === '');\n\nconst copyText = (textToCopy) => {\n    let textArea = document.createElement('textarea');\n    let error = null;\n    textArea.value = textToCopy;\n    textArea.style.top = '0';\n    textArea.style.left = '0';\n    textArea.style.position = 'fixed';\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n    try {\n        document.execCommand('copy');\n    } catch (err) {\n        error = err;\n    }\n    document.body.removeChild(textArea);\n    return error;\n};\n\nexport {\n    isEmptyString,\n    copyText\n};\n","import { isEmptyString } from './index';\n\nexport const themes = Object.freeze({\n    DARK: 'dark',\n    LIGHT: 'light',\n});\n\nexport const getTheme = () => {\n    const theme = !isEmptyString(localStorage.getItem('swooshTheme')) ?\n        localStorage.getItem('swooshTheme') : themes.LIGHT;\n    return theme;\n};\n\nexport const setTheme = theme => {\n    localStorage.setItem('swooshTheme', theme);\n    document.documentElement.setAttribute('theme-mode', theme);\n};\n\nexport const themed = (lightVal, darkVal) => getTheme() === themes.LIGHT ? lightVal : darkVal;","import { useEffect, useState } from 'react';\nimport IconButton from '../iconButton';\nimport classes from './styles.module.css';\nimport DarkModeIcon from '../../assets/darkModeIcon';\nimport LightModeIcon from '../../assets/lightModeIcon';\nimport { themes, getTheme, setTheme } from '../../utils/theme';\n\n\nconst Page = props => {\n    const [darkMode, setDarkMode] = useState(false);\n\n    useEffect(() => loadTheme(), []);\n\n    const loadTheme = () => {\n        const currTheme = getTheme();\n        setDarkMode(currTheme === themes.DARK);\n        setTheme(currTheme);\n    };\n    const handleThemeChange = () => {\n        const currTheme = getTheme();\n        setDarkMode(currTheme !== themes.DARK );\n        setTheme(currTheme === themes.DARK ? themes.LIGHT : themes.DARK);\n        if (typeof props.shouldComponentUpdate === 'function') props.shouldComponentUpdate(new Date().getTime());\n    };\n\n    return <div className={classes.page}>\n        <div className={classes.pageBackground} />\n        <div className={classes.pageContent}>\n            <IconButton onClick={handleThemeChange}\n                style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    position: 'absolute',\n                    top: '16px',\n                    right: '16px',\n                }}>\n                {darkMode ? <DarkModeIcon /> : <LightModeIcon />}\n            </IconButton>\n            {props.children}\n        </div>\n    </div>;\n};\n\nexport default Page;","import classes from './styles.module.css';\n\nconst Header = () => {\n    return <div className={classes.headerContent}>Sw<span>oo</span>sh</div>;\n\n};\n\nexport default Header;","import React from 'react';\nimport classes from './styles.module.css';\n\nconst Input = React.memo(props => {\n    const { inputVal, handleInputChange, placeholderValue, rows, style } = props;\n    const handleChange = e => handleInputChange(e.target.value);\n\n    return rows === 1\n        ? <input className={classes.inputContent} style={style} onChange={handleChange}\n            placeholder={placeholderValue} rows={rows} value={inputVal} />\n        : <textarea className={classes.inputContent} style={style} onChange={handleChange}\n            placeholder={placeholderValue} rows={rows} value={inputVal} />;\n});\n\nexport default Input;","const ExpandIcon = props => {\n    const { height, width, fill, strokeColor, strokeWidth, style } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' style={style} height={height} width={width} viewBox='0 0 24 24'\n        fill={fill} stroke={strokeColor} strokeWidth={strokeWidth} strokeLinecap='round' strokeLinejoin='round'>\n        <path fill='none' stroke='none' d='M0 0h24v24H0z' />\n        <polyline points='6 9 12 15 18 9' />\n    </svg>;\n};\n\nexport default ExpandIcon;\n\nExpandIcon.defaultProps = {\n    height: '1rem',\n    width: '1rem',\n    fill: 'none',\n    strokeColor: '#666',\n    strokeWidth: 1.5,\n};","const MESSAGE_API_URI_DEV = 'http://localhost:5050/api/v1/messages/';\n\nconst MESSAGE_API_URI_PROD = 'https://swoosh-server.herokuapp.com/api/v1/messages/';\n\nconst MESSAGE_API_URL = process.env.NODE_ENV === 'development' ? MESSAGE_API_URI_DEV : MESSAGE_API_URI_PROD;\n\n// const HOMEPAGE_PATH = '/text-encryptor';\nconst HOMEPAGE_PATH = '/';\n\nconst TIME_UNIT = Object.freeze({\n    MINUTE: 'Minute',\n    HOUR: 'Hour',\n    DAY: 'Day'\n});\n\nconst convertToMilliSeconds = (name, value) => {\n    const minToMilliSec = 60 * 1000;\n    const hourToMilliSec = 60 * minToMilliSec;\n    const dayToMilliSec = 24 * hourToMilliSec;\n\n    switch (name) {\n    case TIME_UNIT.MINUTE:\n        return value * minToMilliSec;\n    case TIME_UNIT.HOUR:\n        return value * hourToMilliSec;\n    case TIME_UNIT.DAY:\n        return value * dayToMilliSec;\n    }\n};\n\nconst VALID_FOR_OPTIONS = Object.freeze({\n    MIN_15: { 'name': '15 Minutes', 'value': convertToMilliSeconds(TIME_UNIT.MINUTE, 15) }, //Value is in milliseconds\n    MIN_30: { 'name': '30 Minutes', 'value': convertToMilliSeconds(TIME_UNIT.MINUTE, 30) },\n    HOUR_1: { 'name': '1 Hour', 'value': convertToMilliSeconds(TIME_UNIT.HOUR, 1) },\n    HOUR_3: { 'name': '3 Hours', 'value': convertToMilliSeconds(TIME_UNIT.HOUR, 3) },\n    HOUR_6: { 'name': '6 Hours', 'value': convertToMilliSeconds(TIME_UNIT.HOUR, 6) },\n    HOUR_12: { 'name': '12 Hours', 'value': convertToMilliSeconds(TIME_UNIT.HOUR, 12) },\n    DAY_1: { 'name': '1 Day', 'value': convertToMilliSeconds(TIME_UNIT.DAY, 1) }\n});\n\nconst SEVERITY = Object.freeze({\n    INFO: 1,\n    WARNING: 2,\n    ERROR: 3,\n    SUCCESS: 4\n});\n\nexport {\n    MESSAGE_API_URL,\n    TIME_UNIT,\n    VALID_FOR_OPTIONS,\n    SEVERITY,\n    HOMEPAGE_PATH,\n};\n","import Downshift from 'downshift';\nimport IconButton from '../iconButton';\nimport ExpandIcon from '../../assets/expandIcon';\nimport classes from './styles.module.css';\nimport { VALID_FOR_OPTIONS } from '../constants';\nimport { themed } from '../../utils/theme';\nimport { isEmptyString } from '../../utils';\n\nconst Select = props => {\n    const { validity, handleValidityChange, placeholder = '' } = props;\n\n    return <Downshift onChange={e => handleValidityChange(e)} selectedItem={validity}\n        itemToString={validOptions => validOptions ? validOptions.name.toString() : ''}>\n        {({\n            isOpen,\n            inputValue,\n            selectedItem,\n            highlightedIndex,\n            getInputProps,\n            getToggleButtonProps,\n            getMenuProps,\n            getItemProps,\n        }) => (<div className={classes.selectContainer}>\n            <div className={classes.selectContent}>\n                <input className={classes.selectInput} {...getInputProps({\n                    placeholder,\n                    value: inputValue,\n                })} />\n                <IconButton {...getToggleButtonProps()}>\n                    <ExpandIcon strokeColor={themed('#666', '#f7f7f7')}\n                        style={{\n                            transform: isOpen ? 'rotate(180deg)' : 'rotate(0)',\n                            transition: 'transform 0.15s'\n                        }} />\n                </IconButton>\n            </div>\n            {isOpen ? <div className={classes.selectListContainer} {...getMenuProps()}>\n                {Object.entries(VALID_FOR_OPTIONS)\n                    .filter(item => isEmptyString(inputValue) ||\n                        item[1].name.toLowerCase().includes(inputValue.toLowerCase()))\n                    .map((item, index) =>\n                        <div className={classes.selectListItem}\n                            {...getItemProps({\n                                item: item[1],\n                                index,\n                                key: index,\n                            })}\n                            style={{\n                                color: selectedItem === item[1] && '#36b6ab',\n                                backgroundColor: highlightedIndex === index && themed('#d7d7d7', '#152d3a')\n                            }}>\n                            {item[1].name}\n                        </div>)}\n            </div> : null}\n        </div>)}\n    </Downshift>;\n};\n\nexport default Select;","import React from 'react';\nimport classes from './styles.module.css';\n\nconst Button = React.memo(props => {\n    const { children, style, onClick } = props;\n\n    return <button className={classes.buttonContent} style={style} onClick={onClick}>\n        <span>{children}</span>\n    </button>;\n});\n\nexport default Button;","const CloseIcon = props => {\n    const { height, width, fillColor, strokeColor, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24'>\n        <path fill={fillColor} stroke={strokeColor} strokeWidth={strokeWidth} d='M6 18L18 6M6 6l12 12' />\n    </svg>;\n};\n\nexport default CloseIcon;\n\nCloseIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fillColor: 'none',\n    strokeColor: '#fff',\n    strokeWidth: 1.5,\n};","const ErrorIcon = props => {\n    const { height, width, fillColor, strokeColor, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24' >\n        <path fill={fillColor} stroke={strokeColor} strokeWidth={strokeWidth} strokeLinecap='round'\n            strokeLinejoin='round' d='M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z' />\n    </svg>;\n};\n\nexport default ErrorIcon;\n\nErrorIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fillColor: 'none',\n    strokeColor: '#fff',\n    strokeWidth: 1.5,\n};","const InfoIcon = props => {\n    const { height, width, fillColor, strokeColor, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24' >\n        <path fill={fillColor} stroke={strokeColor} strokeWidth={strokeWidth} strokeLinecap='round'\n            strokeLinejoin='round' d='M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z' />\n    </svg>;\n};\n\nexport default InfoIcon;\n\nInfoIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fillColor: 'none',\n    strokeColor: '#fff',\n    strokeWidth: 1.5,\n};","const SuccessIcon = props => {\n    const { height, width, fillColor, strokeColor, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24'\n        fill={fillColor} stroke={strokeColor} strokeWidth={strokeWidth} >\n        <polyline points='9 11 12 14 20 6' />\n        <path d='M20 12v6a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h9' />\n    </svg>;\n};\n\nexport default SuccessIcon;\n\nSuccessIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fillColor: 'none',\n    strokeColor: '#fff',\n    strokeWidth: 1.5,\n};","const WarningIcon = props => {\n    const { height, width, fillColor, strokeColor, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24'>\n        <path fill={fillColor} stroke={strokeColor} strokeWidth={strokeWidth}\n            strokeLinecap='round' strokeLinejoin='round'\n            d={`M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z`} />\n    </svg>;\n};\n\nexport default WarningIcon;\n\nWarningIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fillColor: 'none',\n    strokeColor: '#fff',\n    strokeWidth: 1.5,\n};","const useAsyncExec = (cb, delay) => {\n    const id = setTimeout(cb, delay);\n    return id;\n};\n\nexport default useAsyncExec;\n\nuseAsyncExec.defaultProps = { delay: 0 };","import { useState } from 'react';\nimport { useMemo, useEffect } from 'react';\nimport classes from './styles.module.css';\nimport IconButton from '../iconButton';\nimport CloseIcon from '../../assets/closeIcon';\nimport ErrorIcon from '../../assets/errorIcon';\nimport InfoIcon from '../../assets/infoIcon';\nimport SuccessIcon from '../../assets/successIcon';\nimport WarningIcon from '../../assets/warningIcon';\nimport { SEVERITY } from '../constants';\nimport useAsyncExec from '../../hooks/useAsyncExec';\n\nconst SnackBar = props => {\n    const { message, severity, handleClose } = props;\n    const [timer, setTimer] = useState(0);\n\n    useEffect(() => setTimer(useAsyncExec(handleClose, 3000)), []);\n\n    const snackbarClose = () => {\n        clearTimeout(timer);\n        handleClose();\n    };\n\n    const selectSeverityIcon = useMemo(() => {\n        switch (severity) {\n        case SEVERITY.INFO:\n            return <InfoIcon />;\n        case SEVERITY.WARNING:\n            return <WarningIcon />;\n        case SEVERITY.ERROR:\n            return <ErrorIcon />;\n        default:\n            return <SuccessIcon />;\n        }\n    }, [severity]);\n\n    return <div className={classes.snackbarContainer}>\n        {selectSeverityIcon}\n        <div className={classes.message}>{message}</div>\n        <IconButton onClick={snackbarClose}>\n            <CloseIcon />\n        </IconButton>\n    </div>;\n};\n\nexport default SnackBar;","import classes from './styles.module.css';\nimport { Fragment } from 'react';\n\nconst Loader = props => {\n    const { loading } = props;\n    return <Fragment>\n        {loading ? <div className={classes.loader} />\n            : null}\n    </Fragment>;\n};\n\nexport default Loader;","import classes from './styles.module.css';\nimport Button from '../button';\n\nconst Error = props => {\n    const { error: { message, status }, buttonLabel, onClick } = props;\n\n    return <div className={classes.errorWrapper}>\n        <div className={classes.errorContainer}>\n            <div className={classes.errorStatus}>{status}</div>\n            <div className={classes.errorContent}>\n                {message}\n                <br />\n                Click on the button below to create a message.\n            </div>\n        </div>\n        {typeof onClick === 'function' &&\n            <Button onClick={onClick}>\n                {buttonLabel}\n            </Button>}\n    </div>;\n};\n\nexport default Error;\n","import classes from './styles.module.css';\nimport ExpandIcon from '../../assets/expandIcon';\nimport { useState } from 'react';\nimport { themed } from '../../utils/theme';\n\nconst Description = () => {\n    const [showContent, setShowContent] = useState(false);\n\n    const handleShowContent = () => setShowContent(!showContent);\n\n    return <div className={classes.descriptionContainer}>\n        <div className={classes.descriptionHeading} onClick={handleShowContent}>\n            <div className={classes.descriptionLabel}>How it Works?</div>\n            <ExpandIcon\n                height='0.75rem'\n                width='0.75rem'\n                strokeColor={themed('#1480779f', '#36b6aba7')}\n                style={{\n                    display: 'flex', alignItems: 'center', justifyContent: 'center',\n                    transform: showContent ? 'rotate(180deg)' : 'rotate(0)',\n                    transition: 'transform 0.15s'\n                }}\n            />\n        </div>\n        {showContent && <div className={classes.descriptionContent}>\n            <p>- Enter the message phrase that you intend to send to someone.</p>\n            <p>- Enter a secret key which acts as a password to protect your message.</p>\n            <p>- Choose for how long do you want your message to remain valid.</p>\n            <p>- Once encrypted, you can share the link with your friend(s) who can \n            decrypt your message with the help of the secret key you provided.</p>\n        </div>}\n    </div>;\n};\n\nexport default Description;","const ClipBoardChecked = (props) => {\n    const { color, height, width } = props;\n\n    return (\n        <svg\n            xmlns='http://www.w3.org/2000/svg'\n            width={width}\n            height={height}\n            viewBox='0 0 24 24'\n            strokeWidth='1.5'\n            stroke={color}\n            fill='none'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        >\n            <path stroke='none' d='M0 0h24v24H0z' fill='none' />\n            <path d='M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2' />\n            <rect x='9' y='3' width='6' height='4' rx='2' />\n            <path d='M9 14l2 2l4 -4' />\n        </svg>\n    );\n};\n\nexport default ClipBoardChecked;\n\nClipBoardChecked.defaultProps = {\n    color: '#FFF',\n    height: 16,\n    width: 16,\n};\n","const ClipBoard = (props) => {\n    const { color, height, width } = props;\n\n    return (\n        <svg\n            xmlns='http://www.w3.org/2000/svg'\n            width={width}\n            height={height}\n            viewBox='0 0 24 24'\n            strokeWidth='1.5'\n            stroke={color}\n            fill='none'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        >\n            <path stroke='none' d='M0 0h24v24H0z' fill='none' />\n            <path d='M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2' />\n            <rect x='9' y='3' width='6' height='4' rx='2' />\n        </svg>\n    );\n};\n\nexport default ClipBoard;\n\nClipBoard.defaultProps = {\n    color: '#FFF',\n    height: 16,\n    width: 16,\n};\n","import { useState, useCallback, Fragment, useEffect } from 'react';\nimport Input from '../input';\nimport Select from '../select';\nimport Button from '../button';\nimport SnackBar from '../snackbar';\nimport Loader from '../loader';\nimport Error from '../error';\nimport Description from '../description';\nimport classes from './styles.module.css';\nimport { isEmptyString, copyText } from '../../utils';\nimport { SEVERITY, MESSAGE_API_URL, VALID_FOR_OPTIONS } from '../constants';\nimport useAsyncExec from '../../hooks/useAsyncExec';\nimport ClipBoardChecked from '../../assets/clipboardChecked';\nimport ClipBoard from '../../assets/clipboard';\nimport IconButton from '../iconButton';\n\nconst Generate = () => {\n    const [inputTextVal, setInputTextVal] = useState('');\n    const [inputSecretKey, setInputSecretKey] = useState('');\n    const [validity, setValidity] = useState(VALID_FOR_OPTIONS.MIN_30);\n    const [loading, setLoading] = useState(false);\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [error, setError] = useState(null);\n    const [snackbarMessage, setSnackbarMessage] = useState('');\n    const [snackbarSeverity, setSnackbarSeverity] = useState(SEVERITY.INFO);\n    const [fetchResult, setFetchResult] = useState(false);\n    const [url, setUrl] = useState('');\n    const [urlCopied, setUrlCopied] = useState(false);\n\n    const handleInputTextChange = useCallback(value => setInputTextVal(value), []);\n\n    const handleInputSecretKeyChange = useCallback(value => setInputSecretKey(value), []);\n\n    const handleValidityChange = useCallback(value => setValidity(value), []);\n\n    const handleSnackbarClose = useCallback(() => setOpenSnackbar(false), []);\n\n    const handleReset = useCallback(() => {\n        setError(null);\n        setUrl('');\n    }, []);\n\n    const openInNewTab = useCallback(() => {\n        const newWindow = window.open(url, '_blank', 'noopener,noreferrer');\n        if (newWindow) newWindow.opener = null;\n    }, [url]);\n\n    const handleEncryption = useCallback(() => {\n        const message = (isEmptyString(inputTextVal) || isEmptyString(inputSecretKey) || isEmptyString(validity)) ?\n            'Missing either Text to Encrypt or Secret Key or Validity Duration!' : '';\n        const severity = (isEmptyString(inputTextVal) || isEmptyString(inputSecretKey)) && SEVERITY.INFO;\n        setSnackbarMessage(message);\n        setSnackbarSeverity(severity);\n        setOpenSnackbar(!isEmptyString(message));\n        setFetchResult(isEmptyString(message) ? true : false);\n        useAsyncExec(() => {\n            setFetchResult(false);\n            handleInputTextChange('');\n            handleInputSecretKeyChange('');\n            handleValidityChange(VALID_FOR_OPTIONS.MIN_30);\n        });\n    }, [inputTextVal, inputSecretKey, validity]);\n\n    const sendNewMessageRequest = useCallback(() => {\n        setLoading(true);\n        fetch(MESSAGE_API_URL, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                content: inputTextVal,\n                validFor: validity.value,\n                secretKey: inputSecretKey\n            })\n        })\n            .then(res => res.json())\n            .then(result => {\n                if (result.error) {\n                    setError({ message: result.error.message, status: result.status });\n                }\n                setUrl(result.data?.url || '');\n            })\n            .catch(error => {\n                setError({ message: error.message, status: '500' });\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, [inputTextVal, inputSecretKey, validity]);\n\n    useEffect(() => fetchResult && sendNewMessageRequest(), [fetchResult, sendNewMessageRequest]);\n\n    const handleUrlCopy = useCallback(() => {\n        if (isEmptyString(url)) return;\n        if (!isEmptyString(copyText(url))) return;\n        setUrlCopied(true);\n        useAsyncExec(() => setUrlCopied(false), 2000);\n    }, [url]);\n\n    return <Fragment>\n        {!isEmptyString(error) ?\n            <Error error={error} buttonLabel='Create Message' onClick={handleReset} />\n            : <>\n                {(isEmptyString(url)\n                    ? <div className={classes.generatorContainer}>\n                        <Input inputVal={inputTextVal} handleInputChange={handleInputTextChange}\n                            placeholderValue='Enter Text' rows={10} />\n                        <div className={classes.container}>\n                            <Input inputVal={inputSecretKey} handleInputChange={handleInputSecretKeyChange}\n                                placeholderValue='Enter Secret Key' style={{ flex: 1 }} rows={1} />\n                            <Select validity={validity} placeholder='Validity'\n                                handleValidityChange={handleValidityChange} />\n                        </div>\n                        <div>\n                            <Button onClick={handleEncryption}>Encrypt</Button>\n                        </div>\n                    </div>\n                    : <div className={classes.generatorContainer}>\n                        <div className={classes.urlContent}>\n                            <div className={classes.urlText} onClick={openInNewTab}>{url}</div>\n                            <IconButton onClick={handleUrlCopy}>\n                                {urlCopied ? <ClipBoardChecked /> : <ClipBoard />}\n                            </IconButton>\n                        </div>\n                        <div>\n                            <Button onClick={handleReset}>Create Message</Button>\n                        </div>\n                    </div>\n                )}\n                <Description />\n            </>\n        }\n        <Loader loading={loading} />\n        {openSnackbar &&\n            <SnackBar message={snackbarMessage} severity={snackbarSeverity} handleClose={handleSnackbarClose} />}\n    </Fragment>;\n};\n\nexport default Generate;","import classes from './styles.module.css';\nimport { Fragment, useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Button from '../button';\nimport Input from '../input';\nimport SnackBar from '../snackbar';\nimport Loader from '../loader';\nimport Error from '../error';\nimport { isEmptyString } from '../../utils';\nimport { HOMEPAGE_PATH, SEVERITY } from '../constants';\nimport { MESSAGE_API_URL } from '../constants';\nimport useAsyncExec from '../../hooks/useAsyncExec';\n\nconst Message = props => {\n    const { id } = useParams();\n    const [url, setUrl] = useState(MESSAGE_API_URL);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [decryptMessage, setDecryptMessage] = useState('');\n    const [inputSecretKey, setInputSecretKey] = useState('');\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState('');\n    const [snackbarSeverity, setSnackbarSeverity] = useState(SEVERITY.INFO);\n    const [fetchResult, setFetchResult] = useState(false);\n\n    const handleErrorInResponse = useCallback(result => {\n        setError({ message: result.error.message, status: result.status });\n    }, []);\n\n    const handleInputSecretKeyChange = useCallback(value => setInputSecretKey(value), []);\n\n    const handleSnackbarClose = useCallback(() => setOpenSnackbar(false), []);\n\n    const handleRedirectToHome = useCallback(() => props.history.replace(HOMEPAGE_PATH), []);\n\n    const handleDecryption = useCallback(() => {\n        const message = isEmptyString(inputSecretKey) ? 'Missing Secret Key!' : '';\n        const severity = isEmptyString(inputSecretKey) && SEVERITY.INFO;\n        setSnackbarMessage(message);\n        setSnackbarSeverity(severity);\n        setOpenSnackbar(!isEmptyString(message));\n        setFetchResult(isEmptyString(message) ? true : false);\n        useAsyncExec(() => {\n            setFetchResult(false);\n            handleInputSecretKeyChange('');\n        });\n    }, [inputSecretKey]);\n\n    const fetchMessage = useCallback(() => {\n        setLoading(true);\n        fetch(url + '?secretKey=' + inputSecretKey)\n            .then(response => response.json())\n            .then(result => {\n                if (!isEmptyString(result.error)) handleErrorInResponse(result);\n                setDecryptMessage(result.data?.message || '');\n            })\n            .catch(error => {\n                setError({ message: error.message, status: '500' });\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, [url, inputSecretKey]);\n\n    useEffect(() => {\n        //Check if id exists or not\n        setLoading(true);\n        fetch(url + id)\n            .then(response => response.json())\n            .then(result => {\n                if (!isEmptyString(result.error)) handleErrorInResponse(result);\n                setUrl(result.data ? url + id + '/decrypt' : url);\n            })\n            .catch(error => {\n                setError({ message: error.message, status: '500' });\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, []);\n\n    useEffect(() => fetchResult && fetchMessage(), [fetchResult, fetchMessage]);\n\n    return <Fragment>\n        {!isEmptyString(error)\n            ? <Error error={error} buttonLabel={`Create Message`} onClick={handleRedirectToHome} />\n            : <Fragment>\n                {isEmptyString(decryptMessage)\n                    ? <div className={classes.container}>\n                        <Input inputVal={inputSecretKey} placeholderValue='Enter Secret Key' rows={1}\n                            handleInputChange={handleInputSecretKeyChange} />\n                        <div>\n                            <Button onClick={handleDecryption}>Decrypt</Button>\n                        </div>\n                    </div>\n                    : <div className={classes.container}>\n                        <div className={classes.messageContent}>{decryptMessage}</div>\n                        <div>\n                            <Button onClick={handleRedirectToHome}>Create Message</Button>\n                        </div>\n                    </div>\n                }\n                <Loader loading={loading} />\n                {openSnackbar &&\n                <SnackBar message={snackbarMessage} severity={snackbarSeverity} handleClose={handleSnackbarClose} />}\n            </Fragment>}\n    </Fragment>;\n};\n\nexport default Message;","import Error from '../error';\nimport { useCallback } from 'react';\nimport { HOMEPAGE_PATH } from '../constants';\n\nconst ErrorPage = props => {\n    const error = { message: 'Page Not Found!', status: '404' };\n    const buttonName = 'Create Message';\n\n    const handleRedirectToHome = useCallback(() => props.history.replace(HOMEPAGE_PATH), []);\n\n    return <Error error={error} buttonLabel={buttonName} onClick={handleRedirectToHome} />;\n};\n\nexport default ErrorPage;","import { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from '../header';\nimport Generate from '../generate';\nimport Message from '../message';\nimport ErrorPage from '../errorPage';\n\nconst Routing = () => {\n    return <Router>\n        <Header />\n        <Switch>\n            <Route exact path='/' component={Generate} />\n            <Route exact path='/messages/:id' component={Message} />\n            <Route path='*' component={ErrorPage} />\n        </Switch>\n    </Router>;\n};\n\nexport default Routing;","import { useState } from 'react';\nimport './App.css';\nimport Page from './components/page';\nimport Routing from './components/router';\n\nconst App = () => {\n    const [, setRefresher] = useState();\n\n    const updateComponent = (refresher = null) => refresher && setRefresher(refresher);\n\n    return <Page shouldComponentUpdate={updateComponent}>\n        <div className='appContainer'><Routing /></div>\n    </Page>;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}