{"version":3,"sources":["components/select/styles.module.css","components/generate/styles.module.css","components/error/styles.module.css","components/description/styles.module.css","components/message/styles.module.css","components/page/styles.module.css","components/input/styles.module.css","components/snackbar/styles.module.css","components/iconButton/styles.module.css","components/header/styles.module.css","components/button/styles.module.css","components/loader/styles.module.css","components/iconButton/index.js","assets/darkModeIcon.js","assets/lightModeIcon.js","utils/index.js","utils/theme.js","components/page/index.js","components/header/index.js","components/input/index.js","assets/expandIcon.js","components/constants/index.js","components/select/index.js","components/button/index.js","assets/closeIcon.js","assets/errorIcon.js","assets/infoIcon.js","assets/successIcon.js","assets/warningIcon.js","hooks/useAsyncExec.js","components/snackbar/index.js","components/loader/index.js","components/error/index.js","components/description/index.js","assets/clipboardChecked.js","assets/clipboard.js","components/generate/index.js","components/message/index.js","components/errorPage/index.js","components/router/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","IconButton","React","memo","props","children","style","onClick","className","classes","iconButton","DarkModeIcon","height","width","fill","stroke","strokeWidth","xmlns","viewBox","strokeLinecap","strokeLinejoin","d","defaultProps","LightModeIcon","isEmptyString","value","trim","isEmptyObject","copyText","textToCopy","textArea","document","createElement","error","top","left","position","body","appendChild","focus","select","execCommand","err","removeChild","themes","Object","freeze","DARK","LIGHT","getTheme","localStorage","getItem","setTheme","theme","setItem","documentElement","setAttribute","themed","lightVal","darkVal","Page","useState","darkMode","setDarkMode","useEffect","loadTheme","currTheme","page","pageBackground","pageContent","shouldComponentUpdate","Date","getTime","display","alignItems","right","Header","headerContent","Input","inputVal","handleInputChange","placeholderValue","rows","handleChange","e","target","inputContent","onChange","placeholder","ExpandIcon","strokeColor","points","MESSAGE_API_URL","HOMEPAGE_PATH","TIME_UNIT","MINUTE","HOUR","DAY","convertToMilliSeconds","name","hourToMilliSec","VALID_FOR_OPTIONS","MIN_15","MIN_30","HOUR_1","HOUR_3","HOUR_6","HOUR_12","DAY_1","SEVERITY","INFO","WARNING","ERROR","SUCCESS","Select","validity","handleValidityChange","selectedItem","itemToString","validOptions","toString","isOpen","inputValue","highlightedIndex","getInputProps","getToggleButtonProps","getMenuProps","getItemProps","selectContainer","selectContent","selectInput","transform","transition","selectListContainer","entries","filter","item","toLowerCase","includes","map","index","selectListItem","key","color","backgroundColor","Button","buttonContent","CloseIcon","fillColor","ErrorIcon","InfoIcon","SuccessIcon","WarningIcon","useAsyncExec","cb","delay","setTimeout","SnackBar","message","severity","handleClose","timer","setTimer","selectSeverityIcon","useMemo","snackbarContainer","clearTimeout","Loader","loading","loader","Error","status","buttonLabel","errorWrapper","errorContainer","errorStatus","errorContent","Description","showContent","setShowContent","descriptionContainer","descriptionHeading","descriptionLabel","justifyContent","descriptionContent","ClipBoardChecked","x","y","rx","ClipBoard","Generate","inputTextVal","setInputTextVal","inputSecretKey","setInputSecretKey","setValidity","setLoading","openSnackbar","setOpenSnackbar","setError","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","fetchResult","setFetchResult","url","setUrl","urlCopied","setUrlCopied","handleInputTextChange","useCallback","handleInputSecretKeyChange","handleSnackbarClose","handleReset","openInNewTab","newWindow","window","open","opener","handleEncryption","sendNewMessageRequest","fetch","method","headers","JSON","stringify","content","validFor","secretKey","then","res","json","result","data","catch","finally","handleUrlCopy","generatorContainer","container","flex","urlContent","urlText","Message","id","useParams","decryptMessage","setDecryptMessage","messageCopied","setMessageCopied","handleErrorInResponse","handleRedirectToHome","history","replace","handleDecryption","fetchMessage","response","handleMessageCopy","messageContainer","messageContent","ErrorPage","Routing","exact","path","component","App","setRefresher","refresher","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cb24c920.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectContainer\":\"styles_selectContainer__2J6aO\",\"selectContent\":\"styles_selectContent__2YgRY\",\"selectInput\":\"styles_selectInput__1_Y3U\",\"selectListContainer\":\"styles_selectListContainer__2h0km\",\"selectListItem\":\"styles_selectListItem__11PkM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"generatorContainer\":\"styles_generatorContainer__LhFWX\",\"container\":\"styles_container__344pv\",\"urlContent\":\"styles_urlContent__YrOVe\",\"urlText\":\"styles_urlText__27DED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorWrapper\":\"styles_errorWrapper__XRRln\",\"errorContainer\":\"styles_errorContainer__3sMBV\",\"errorStatus\":\"styles_errorStatus__2kJqV\",\"errorContent\":\"styles_errorContent__3Z7ON\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionContainer\":\"styles_descriptionContainer__23U9u\",\"descriptionHeading\":\"styles_descriptionHeading__gN2qJ\",\"descriptionLabel\":\"styles_descriptionLabel__25sK3\",\"descriptionContent\":\"styles_descriptionContent__1aMeQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageContainer\":\"styles_messageContainer__2maCw\",\"messageContent\":\"styles_messageContent__1SmNT\",\"container\":\"styles_container__1T7HA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"styles_page__229xo\",\"pageBackground\":\"styles_pageBackground__1NayQ\",\"pageContent\":\"styles_pageContent__3ywP6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContent\":\"styles_inputContent__X9QFY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snackbarContainer\":\"styles_snackbarContainer__1SpBV\",\"message\":\"styles_message__2dawB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconButton\":\"styles_iconButton__3lGUI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContent\":\"styles_headerContent__1hAlc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContent\":\"styles_buttonContent__38_um\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"styles_loader__3QW4r\",\"changeSize\":\"styles_changeSize__8-IZj\"};","import React from 'react';\nimport classes from './styles.module.css';\n\nconst IconButton = React.memo(props => {\n    const { children, style, onClick } = props;\n\n    return <button className={classes.iconButton} style={style} onClick={onClick}>{children}</button>;\n});\n\nexport default IconButton;","const DarkModeIcon = props => {\n    const { height, width, fill, stroke, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24'>\n        <path fill={fill} stroke={stroke} strokeWidth={strokeWidth} strokeLinecap='round' strokeLinejoin='round'\n            d={`M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z`} />\n    </svg>;\n};\n\nexport default DarkModeIcon;\n\nDarkModeIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fill: 'none',\n    stroke: '#f7f7f7',\n    strokeWidth: 1.5,\n};\n","const LightModeIcon = props => {\n    const { height, width, fill, stroke, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24'\n        fill={fill} stroke={stroke} strokeWidth={strokeWidth} strokeLinecap='round' strokeLinejoin='round'>\n        <path fill='none' stroke='none' d='M0 0h24v24H0z' />\n        <path d='M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z' />\n        <path d='M17 4a2 2 0 0 0 2 2a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2a2 2 0 0 0 2 -2' />\n        <path d='M19 11h2m-1 -1v2' />\n    </svg>;\n};\n\nexport default LightModeIcon;\n\nLightModeIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fill: 'none',\n    stroke: '#666',\n    strokeWidth: 1.5,\n};","const isEmptyString = value => !value || (typeof value === 'string' && value.trim() === '');\n\nconst isEmptyObject = value => !value;\n\nconst copyText = (textToCopy) => {\n    let textArea = document.createElement('textarea');\n    let error = null;\n    textArea.value = textToCopy;\n    textArea.style.top = '0';\n    textArea.style.left = '0';\n    textArea.style.position = 'fixed';\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n    try {\n        document.execCommand('copy');\n    } catch (err) {\n        error = err;\n    }\n    document.body.removeChild(textArea);\n    return error;\n};\n\nexport {\n    isEmptyString,\n    isEmptyObject,\n    copyText\n};\n","import { isEmptyString } from './index';\n\nexport const themes = Object.freeze({\n    DARK: 'dark',\n    LIGHT: 'light',\n});\n\nexport const getTheme = () => {\n    const theme = !isEmptyString(localStorage.getItem('swooshTheme')) ?\n        localStorage.getItem('swooshTheme') : themes.LIGHT;\n    return theme;\n};\n\nexport const setTheme = theme => {\n    localStorage.setItem('swooshTheme', theme);\n    document.documentElement.setAttribute('theme-mode', theme);\n};\n\nexport const themed = (lightVal, darkVal) => getTheme() === themes.LIGHT ? lightVal : darkVal;","import { useEffect, useState } from 'react';\nimport IconButton from '../iconButton';\nimport classes from './styles.module.css';\nimport DarkModeIcon from '../../assets/darkModeIcon';\nimport LightModeIcon from '../../assets/lightModeIcon';\nimport { themes, getTheme, setTheme } from '../../utils/theme';\n\n\nconst Page = props => {\n    const [darkMode, setDarkMode] = useState(false);\n\n    useEffect(() => loadTheme(), []);\n\n    const loadTheme = () => {\n        const currTheme = getTheme();\n        setDarkMode(currTheme === themes.DARK);\n        setTheme(currTheme);\n    };\n    const handleThemeChange = () => {\n        const currTheme = getTheme();\n        setDarkMode(currTheme !== themes.DARK );\n        setTheme(currTheme === themes.DARK ? themes.LIGHT : themes.DARK);\n        if (typeof props.shouldComponentUpdate === 'function') props.shouldComponentUpdate(new Date().getTime());\n    };\n\n    return <div className={classes.page}>\n        <div className={classes.pageBackground} />\n        <div className={classes.pageContent}>\n            <IconButton onClick={handleThemeChange}\n                style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    position: 'absolute',\n                    top: '16px',\n                    right: '16px',\n                }}>\n                {darkMode ? <DarkModeIcon /> : <LightModeIcon />}\n            </IconButton>\n            {props.children}\n        </div>\n    </div>;\n};\n\nexport default Page;","import classes from './styles.module.css';\n\nconst Header = () => {\n    return <div className={classes.headerContent}>Sw<span>oo</span>sh</div>;\n\n};\n\nexport default Header;","import React from 'react';\nimport classes from './styles.module.css';\n\nconst Input = React.memo(props => {\n    const { inputVal, handleInputChange, placeholderValue, rows, style } = props;\n    const handleChange = e => handleInputChange(e.target.value);\n\n    return rows === 1\n        ? <input className={classes.inputContent} style={style} onChange={handleChange}\n            placeholder={placeholderValue} rows={rows} value={inputVal} />\n        : <textarea className={classes.inputContent} style={style} onChange={handleChange}\n            placeholder={placeholderValue} rows={rows} value={inputVal} />;\n});\n\nexport default Input;","const ExpandIcon = props => {\n    const { height, width, fill, strokeColor, strokeWidth, style } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' style={style} height={height} width={width} viewBox='0 0 24 24'\n        fill={fill} stroke={strokeColor} strokeWidth={strokeWidth} strokeLinecap='round' strokeLinejoin='round'>\n        <path fill='none' stroke='none' d='M0 0h24v24H0z' />\n        <polyline points='6 9 12 15 18 9' />\n    </svg>;\n};\n\nexport default ExpandIcon;\n\nExpandIcon.defaultProps = {\n    height: '1rem',\n    width: '1rem',\n    fill: 'none',\n    strokeColor: '#666',\n    strokeWidth: 1.5,\n};","const MESSAGE_API_URI_DEV = 'http://localhost:5050/api/v1/messages/';\n\nconst MESSAGE_API_URI_PROD = 'https://swoosh-server.herokuapp.com/api/v1/messages/';\n\nconst MESSAGE_API_URL = process.env.NODE_ENV === 'development' ? MESSAGE_API_URI_DEV : MESSAGE_API_URI_PROD;\n\nconst HOMEPAGE_PATH = '/';\n\nconst TIME_UNIT = Object.freeze({\n    MINUTE: 'Minute',\n    HOUR: 'Hour',\n    DAY: 'Day'\n});\n\nconst convertToMilliSeconds = (name, value) => {\n    const minToMilliSec = 60 * 1000;\n    const hourToMilliSec = 60 * minToMilliSec;\n    const dayToMilliSec = 24 * hourToMilliSec;\n\n    switch (name) {\n    case TIME_UNIT.MINUTE:\n        return value * minToMilliSec;\n    case TIME_UNIT.HOUR:\n        return value * hourToMilliSec;\n    case TIME_UNIT.DAY:\n        return value * dayToMilliSec;\n    }\n};\n\nconst VALID_FOR_OPTIONS = Object.freeze({\n    MIN_15: { 'name': '15 Minutes', 'value': convertToMilliSeconds(TIME_UNIT.MINUTE, 15) }, //Value is in milliseconds\n    MIN_30: { 'name': '30 Minutes', 'value': convertToMilliSeconds(TIME_UNIT.MINUTE, 30) },\n    HOUR_1: { 'name': '1 Hour', 'value': convertToMilliSeconds(TIME_UNIT.HOUR, 1) },\n    HOUR_3: { 'name': '3 Hours', 'value': convertToMilliSeconds(TIME_UNIT.HOUR, 3) },\n    HOUR_6: { 'name': '6 Hours', 'value': convertToMilliSeconds(TIME_UNIT.HOUR, 6) },\n    HOUR_12: { 'name': '12 Hours', 'value': convertToMilliSeconds(TIME_UNIT.HOUR, 12) },\n    DAY_1: { 'name': '1 Day', 'value': convertToMilliSeconds(TIME_UNIT.DAY, 1) }\n});\n\nconst SEVERITY = Object.freeze({\n    INFO: 1,\n    WARNING: 2,\n    ERROR: 3,\n    SUCCESS: 4\n});\n\nexport {\n    MESSAGE_API_URL,\n    TIME_UNIT,\n    VALID_FOR_OPTIONS,\n    SEVERITY,\n    HOMEPAGE_PATH,\n};\n","import Downshift from 'downshift';\nimport IconButton from '../iconButton';\nimport ExpandIcon from '../../assets/expandIcon';\nimport classes from './styles.module.css';\nimport { VALID_FOR_OPTIONS } from '../constants';\nimport { themed } from '../../utils/theme';\nimport { isEmptyString } from '../../utils';\n\nconst Select = props => {\n    const { validity, handleValidityChange, placeholder = '' } = props;\n\n    return <Downshift onChange={e => handleValidityChange(e)} selectedItem={validity}\n        itemToString={validOptions => validOptions ? validOptions.name.toString() : ''}>\n        {({\n            isOpen,\n            inputValue,\n            selectedItem,\n            highlightedIndex,\n            getInputProps,\n            getToggleButtonProps,\n            getMenuProps,\n            getItemProps,\n        }) => (<div className={classes.selectContainer}>\n            <div className={classes.selectContent}>\n                <input className={classes.selectInput} {...getInputProps({\n                    placeholder,\n                    value: inputValue,\n                })} />\n                <IconButton {...getToggleButtonProps()}>\n                    <ExpandIcon strokeColor={themed('#666', '#f7f7f7')}\n                        style={{\n                            transform: isOpen ? 'rotate(180deg)' : 'rotate(0)',\n                            transition: 'transform 0.15s'\n                        }} />\n                </IconButton>\n            </div>\n            {isOpen ? <div className={classes.selectListContainer} {...getMenuProps()}>\n                {Object.entries(VALID_FOR_OPTIONS)\n                    .filter(item => isEmptyString(inputValue) ||\n                        item[1].name.toLowerCase().includes(inputValue.toLowerCase()))\n                    .map((item, index) =>\n                        <div className={classes.selectListItem}\n                            {...getItemProps({\n                                item: item[1],\n                                index,\n                                key: index,\n                            })}\n                            style={{\n                                color: selectedItem === item[1] && '#36b6ab',\n                                backgroundColor: highlightedIndex === index && themed('#d7d7d7', '#152d3a')\n                            }}>\n                            {item[1].name}\n                        </div>)}\n            </div> : null}\n        </div>)}\n    </Downshift>;\n};\n\nexport default Select;","import React from 'react';\nimport classes from './styles.module.css';\n\nconst Button = React.memo(props => {\n    const { children, style, onClick } = props;\n\n    return <button className={classes.buttonContent} style={style} onClick={onClick}>\n        <span>{children}</span>\n    </button>;\n});\n\nexport default Button;","const CloseIcon = props => {\n    const { height, width, fillColor, strokeColor, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24'>\n        <path fill={fillColor} stroke={strokeColor} strokeWidth={strokeWidth} d='M6 18L18 6M6 6l12 12' />\n    </svg>;\n};\n\nexport default CloseIcon;\n\nCloseIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fillColor: 'none',\n    strokeColor: '#fff',\n    strokeWidth: 1.5,\n};","const ErrorIcon = props => {\n    const { height, width, fillColor, strokeColor, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24' >\n        <path fill={fillColor} stroke={strokeColor} strokeWidth={strokeWidth} strokeLinecap='round'\n            strokeLinejoin='round' d='M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z' />\n    </svg>;\n};\n\nexport default ErrorIcon;\n\nErrorIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fillColor: 'none',\n    strokeColor: '#fff',\n    strokeWidth: 1.5,\n};","const InfoIcon = props => {\n    const { height, width, fillColor, strokeColor, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24' >\n        <path fill={fillColor} stroke={strokeColor} strokeWidth={strokeWidth} strokeLinecap='round'\n            strokeLinejoin='round' d='M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z' />\n    </svg>;\n};\n\nexport default InfoIcon;\n\nInfoIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fillColor: 'none',\n    strokeColor: '#fff',\n    strokeWidth: 1.5,\n};","const SuccessIcon = props => {\n    const { height, width, fillColor, strokeColor, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24'\n        fill={fillColor} stroke={strokeColor} strokeWidth={strokeWidth} >\n        <polyline points='9 11 12 14 20 6' />\n        <path d='M20 12v6a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h9' />\n    </svg>;\n};\n\nexport default SuccessIcon;\n\nSuccessIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fillColor: 'none',\n    strokeColor: '#fff',\n    strokeWidth: 1.5,\n};","const WarningIcon = props => {\n    const { height, width, fillColor, strokeColor, strokeWidth } = props;\n\n    return <svg xmlns='http://www.w3.org/2000/svg' height={height} width={width} viewBox='0 0 24 24'>\n        <path fill={fillColor} stroke={strokeColor} strokeWidth={strokeWidth}\n            strokeLinecap='round' strokeLinejoin='round'\n            d={`M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z`} />\n    </svg>;\n};\n\nexport default WarningIcon;\n\nWarningIcon.defaultProps = {\n    height: '1.5rem',\n    width: '1.5rem',\n    fillColor: 'none',\n    strokeColor: '#fff',\n    strokeWidth: 1.5,\n};","const useAsyncExec = (cb, delay) => {\n    const id = setTimeout(cb, delay);\n    return id;\n};\n\nexport default useAsyncExec;\n\nuseAsyncExec.defaultProps = { delay: 0 };","import { useState } from 'react';\nimport { useMemo, useEffect } from 'react';\nimport classes from './styles.module.css';\nimport IconButton from '../iconButton';\nimport CloseIcon from '../../assets/closeIcon';\nimport ErrorIcon from '../../assets/errorIcon';\nimport InfoIcon from '../../assets/infoIcon';\nimport SuccessIcon from '../../assets/successIcon';\nimport WarningIcon from '../../assets/warningIcon';\nimport { SEVERITY } from '../constants';\nimport useAsyncExec from '../../hooks/useAsyncExec';\n\nconst SnackBar = props => {\n    const { message, severity, handleClose } = props;\n    const [timer, setTimer] = useState(0);\n\n    useEffect(() => setTimer(useAsyncExec(handleClose, 3000)), []);\n\n    const snackbarClose = () => {\n        clearTimeout(timer);\n        handleClose();\n    };\n\n    const selectSeverityIcon = useMemo(() => {\n        switch (severity) {\n        case SEVERITY.INFO:\n            return <InfoIcon />;\n        case SEVERITY.WARNING:\n            return <WarningIcon />;\n        case SEVERITY.ERROR:\n            return <ErrorIcon />;\n        default:\n            return <SuccessIcon />;\n        }\n    }, [severity]);\n\n    return <div className={classes.snackbarContainer}>\n        {selectSeverityIcon}\n        <div className={classes.message}>{message}</div>\n        <IconButton onClick={snackbarClose}>\n            <CloseIcon />\n        </IconButton>\n    </div>;\n};\n\nexport default SnackBar;","import classes from './styles.module.css';\nimport { Fragment } from 'react';\n\nconst Loader = props => {\n    const { loading } = props;\n    return <Fragment>\n        {loading ? <div className={classes.loader} />\n            : null}\n    </Fragment>;\n};\n\nexport default Loader;","import classes from './styles.module.css';\nimport Button from '../button';\n\nconst Error = props => {\n    const { error: { message, status }, buttonLabel, onClick } = props;\n\n    return <div className={classes.errorWrapper}>\n        <div className={classes.errorContainer}>\n            <div className={classes.errorStatus}>{status}</div>\n            <div className={classes.errorContent}>\n                {message}\n                <br />\n                Click on the button below to create a message.\n            </div>\n        </div>\n        {typeof onClick === 'function' &&\n            <Button onClick={onClick}>\n                {buttonLabel}\n            </Button>}\n    </div>;\n};\n\nexport default Error;\n","import classes from './styles.module.css';\nimport ExpandIcon from '../../assets/expandIcon';\nimport { useState } from 'react';\nimport { themed } from '../../utils/theme';\n\nconst Description = () => {\n    const [showContent, setShowContent] = useState(false);\n\n    const handleShowContent = () => setShowContent(!showContent);\n\n    return <div className={classes.descriptionContainer}>\n        <div className={classes.descriptionHeading} onClick={handleShowContent}>\n            <div className={classes.descriptionLabel}>How it Works?</div>\n            <ExpandIcon\n                height='0.75rem'\n                width='0.75rem'\n                strokeColor={themed('#1480779f', '#36b6aba7')}\n                style={{\n                    display: 'flex', alignItems: 'center', justifyContent: 'center',\n                    transform: showContent ? 'rotate(180deg)' : 'rotate(0)',\n                    transition: 'transform 0.15s'\n                }}\n            />\n        </div>\n        {showContent && <div className={classes.descriptionContent}>\n            <p>- Enter the message phrase that you intend to send to someone.</p>\n            <p>- Enter a secret key which acts as a password to protect your message.</p>\n            <p>- Choose for how long do you want your message to remain valid.</p>\n            <p>- Once encrypted, you can share the link with your friend(s) who can \n            decrypt your message with the help of the secret key you provided.</p>\n        </div>}\n    </div>;\n};\n\nexport default Description;","const ClipBoardChecked = (props) => {\n    const { color, height, width } = props;\n\n    return (\n        <svg\n            xmlns='http://www.w3.org/2000/svg'\n            width={width}\n            height={height}\n            viewBox='0 0 24 24'\n            strokeWidth='1.5'\n            stroke={color}\n            fill='none'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        >\n            <path stroke='none' d='M0 0h24v24H0z' fill='none' />\n            <path d='M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2' />\n            <rect x='9' y='3' width='6' height='4' rx='2' />\n            <path d='M9 14l2 2l4 -4' />\n        </svg>\n    );\n};\n\nexport default ClipBoardChecked;\n\nClipBoardChecked.defaultProps = {\n    color: '#FFF',\n    height: 16,\n    width: 16,\n};\n","const ClipBoard = (props) => {\n    const { color, height, width } = props;\n\n    return (\n        <svg\n            xmlns='http://www.w3.org/2000/svg'\n            width={width}\n            height={height}\n            viewBox='0 0 24 24'\n            strokeWidth='1.5'\n            stroke={color}\n            fill='none'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        >\n            <path stroke='none' d='M0 0h24v24H0z' fill='none' />\n            <path d='M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2' />\n            <rect x='9' y='3' width='6' height='4' rx='2' />\n        </svg>\n    );\n};\n\nexport default ClipBoard;\n\nClipBoard.defaultProps = {\n    color: '#FFF',\n    height: 16,\n    width: 16,\n};\n","import { useState, useCallback, Fragment, useEffect } from 'react';\nimport Input from '../input';\nimport Select from '../select';\nimport Button from '../button';\nimport SnackBar from '../snackbar';\nimport Loader from '../loader';\nimport Error from '../error';\nimport Description from '../description';\nimport classes from './styles.module.css';\nimport { isEmptyString, isEmptyObject, copyText } from '../../utils';\nimport { SEVERITY, MESSAGE_API_URL, VALID_FOR_OPTIONS } from '../constants';\nimport useAsyncExec from '../../hooks/useAsyncExec';\nimport ClipBoardChecked from '../../assets/clipboardChecked';\nimport ClipBoard from '../../assets/clipboard';\nimport IconButton from '../iconButton';\n\nconst Generate = () => {\n    const [inputTextVal, setInputTextVal] = useState('');\n    const [inputSecretKey, setInputSecretKey] = useState('');\n    const [validity, setValidity] = useState(VALID_FOR_OPTIONS.MIN_30);\n    const [loading, setLoading] = useState(false);\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [error, setError] = useState(null);\n    const [snackbarMessage, setSnackbarMessage] = useState('');\n    const [snackbarSeverity, setSnackbarSeverity] = useState(SEVERITY.INFO);\n    const [fetchResult, setFetchResult] = useState(false);\n    const [url, setUrl] = useState('');\n    const [urlCopied, setUrlCopied] = useState(false);\n\n    const handleInputTextChange = useCallback(value => setInputTextVal(value), []);\n\n    const handleInputSecretKeyChange = useCallback(value => setInputSecretKey(value), []);\n\n    const handleValidityChange = useCallback(value => setValidity(value), []);\n\n    const handleSnackbarClose = useCallback(() => setOpenSnackbar(false), []);\n\n    const handleReset = useCallback(() => {\n        setError(null);\n        setUrl('');\n    }, []);\n\n    const openInNewTab = useCallback(() => {\n        const newWindow = window.open(url, '_blank', 'noopener,noreferrer');\n        if (newWindow) newWindow.opener = null;\n    }, [url]);\n\n    const handleEncryption = useCallback(() => {\n        const message = (isEmptyString(inputTextVal) || isEmptyString(inputSecretKey) || isEmptyString(validity)) ?\n            'Missing either Text to Encrypt or Secret Key or Validity Duration!' : '';\n        const severity = (isEmptyString(inputTextVal) || isEmptyString(inputSecretKey)) && SEVERITY.INFO;\n        setSnackbarMessage(message);\n        setSnackbarSeverity(severity);\n        setOpenSnackbar(!isEmptyString(message));\n        setFetchResult(isEmptyString(message) ? true : false);\n        useAsyncExec(() => {\n            setFetchResult(false);\n            handleInputTextChange('');\n            handleInputSecretKeyChange('');\n            handleValidityChange(VALID_FOR_OPTIONS.MIN_30);\n        });\n    }, [inputTextVal, inputSecretKey, validity]);\n\n    const sendNewMessageRequest = useCallback(() => {\n        setLoading(true);\n        fetch(MESSAGE_API_URL, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                content: inputTextVal,\n                validFor: validity.value,\n                secretKey: inputSecretKey\n            })\n        })\n            .then(res => res.json())\n            .then(result => {\n                if (result.error) {\n                    setError({ message: result.error.message, status: result.status });\n                }\n                setUrl(result.data?.url || '');\n            })\n            .catch(error => {\n                setError({ message: error.message, status: '500' });\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, [inputTextVal, inputSecretKey, validity]);\n\n    useEffect(() => fetchResult && sendNewMessageRequest(), [fetchResult, sendNewMessageRequest]);\n\n    const handleUrlCopy = useCallback(() => {\n        if (isEmptyString(url)) return;\n        if (!isEmptyString(copyText(url))) return;\n        setUrlCopied(true);\n        useAsyncExec(() => setUrlCopied(false), 2000);\n    }, [url]);\n\n    return <Fragment>\n        {!isEmptyObject(error) ?\n            <Error error={error} buttonLabel='Create Message' onClick={handleReset} />\n            : <>\n                {(isEmptyString(url)\n                    ? <div className={classes.generatorContainer}>\n                        <Input inputVal={inputTextVal} handleInputChange={handleInputTextChange}\n                            placeholderValue='Enter Text' rows={10} />\n                        <div className={classes.container}>\n                            <Input inputVal={inputSecretKey} handleInputChange={handleInputSecretKeyChange}\n                                placeholderValue='Enter Secret Key' style={{ flex: 1 }} rows={1} />\n                            <Select validity={validity} placeholder='Validity'\n                                handleValidityChange={handleValidityChange} />\n                        </div>\n                        <div>\n                            <Button onClick={handleEncryption}>Encrypt</Button>\n                        </div>\n                    </div>\n                    : <div className={classes.generatorContainer}>\n                        <div className={classes.urlContent}>\n                            <div className={classes.urlText} onClick={openInNewTab}>{url}</div>\n                            <IconButton onClick={handleUrlCopy}>\n                                {urlCopied ? <ClipBoardChecked /> : <ClipBoard />}\n                            </IconButton>\n                        </div>\n                        <div>\n                            <Button onClick={handleReset}>Create Message</Button>\n                        </div>\n                    </div>\n                )}\n                <Description />\n            </>\n        }\n        <Loader loading={loading} />\n        {openSnackbar &&\n            <SnackBar message={snackbarMessage} severity={snackbarSeverity} handleClose={handleSnackbarClose} />}\n    </Fragment>;\n};\n\nexport default Generate;","import classes from './styles.module.css';\nimport { Fragment, useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Button from '../button';\nimport Input from '../input';\nimport SnackBar from '../snackbar';\nimport Loader from '../loader';\nimport Error from '../error';\nimport { isEmptyString, isEmptyObject, copyText } from '../../utils';\nimport { HOMEPAGE_PATH, SEVERITY } from '../constants';\nimport { MESSAGE_API_URL } from '../constants';\nimport useAsyncExec from '../../hooks/useAsyncExec';\nimport Description from '../description';\nimport ClipBoardChecked from '../../assets/clipboardChecked';\nimport ClipBoard from '../../assets/clipboard';\nimport IconButton from '../iconButton';\n\nconst Message = props => {\n    const { id } = useParams();\n    const [url, setUrl] = useState(MESSAGE_API_URL);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [decryptMessage, setDecryptMessage] = useState('');\n    const [inputSecretKey, setInputSecretKey] = useState('');\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState('');\n    const [snackbarSeverity, setSnackbarSeverity] = useState(SEVERITY.INFO);\n    const [fetchResult, setFetchResult] = useState(false);\n    const [messageCopied, setMessageCopied] = useState(false);\n\n    const handleErrorInResponse = useCallback(result => {\n        setError({ message: result.error.message, status: result.status });\n    }, []);\n\n    const handleInputSecretKeyChange = useCallback(value => setInputSecretKey(value), []);\n\n    const handleSnackbarClose = useCallback(() => setOpenSnackbar(false), []);\n\n    const handleRedirectToHome = useCallback(() => props.history.replace(HOMEPAGE_PATH), []);\n\n    const handleDecryption = useCallback(() => {\n        const message = isEmptyString(inputSecretKey) ? 'Missing Secret Key!' : '';\n        const severity = isEmptyString(inputSecretKey) && SEVERITY.INFO;\n        setSnackbarMessage(message);\n        setSnackbarSeverity(severity);\n        setOpenSnackbar(!isEmptyString(message));\n        setFetchResult(isEmptyString(message) ? true : false);\n        useAsyncExec(() => {\n            setFetchResult(false);\n            handleInputSecretKeyChange('');\n        });\n    }, [inputSecretKey]);\n\n    const fetchMessage = useCallback(() => {\n        setLoading(true);\n        fetch(url + '?secretKey=' + inputSecretKey)\n            .then(response => response.json())\n            .then(result => {\n                if (!isEmptyObject(result.error)) handleErrorInResponse(result);\n                setDecryptMessage(result.data?.message || '');\n            })\n            .catch(error => {\n                setError({ message: error.message, status: '500' });\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, [url, inputSecretKey]);\n\n    useEffect(() => {\n        //Check if id exists or not\n        setLoading(true);\n        fetch(url + id)\n            .then(response => response.json())\n            .then(result => {\n                if (!isEmptyObject(result.error)) handleErrorInResponse(result);\n                setUrl(result.data ? url + id + '/decrypt' : url);\n            })\n            .catch(error => {\n                setError({ message: error.message, status: '500' });\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, []);\n\n    useEffect(() => fetchResult && fetchMessage(), [fetchResult, fetchMessage]);\n\n    const handleMessageCopy = useCallback(() => {\n        if (isEmptyString(decryptMessage)) return;\n        if (!isEmptyString(copyText(decryptMessage))) return;\n        setMessageCopied(true);\n        useAsyncExec(() => setMessageCopied(false), 2000);\n    }, [decryptMessage]);\n\n    return <Fragment>\n        {!isEmptyObject(error)\n            ? <Error error={error} buttonLabel={`Create Message`} onClick={handleRedirectToHome} />\n            : <Fragment>\n                {isEmptyString(decryptMessage)\n                    ? <div className={classes.container}>\n                        <Input inputVal={inputSecretKey} placeholderValue='Enter Secret Key' rows={1}\n                            handleInputChange={handleInputSecretKeyChange} />\n                        <div>\n                            <Button onClick={handleDecryption}>Decrypt</Button>\n                        </div>\n                    </div>\n                    : <div className={classes.container}>\n                        <div className={classes.messageContainer}>\n                            <div className={classes.messageContent}>{decryptMessage}</div>\n                            <IconButton onClick={handleMessageCopy}>\n                                {messageCopied ? <ClipBoardChecked /> : <ClipBoard />}\n                            </IconButton>\n                        </div>\n                        <div>\n                            <Button onClick={handleRedirectToHome}>Create Message</Button>\n                        </div>\n                    </div>\n                }\n                <Description />\n                <Loader loading={loading} />\n                {openSnackbar &&\n                <SnackBar message={snackbarMessage} severity={snackbarSeverity} handleClose={handleSnackbarClose} />}\n            </Fragment>}\n    </Fragment>;\n};\n\nexport default Message;","import Error from '../error';\nimport { useCallback } from 'react';\nimport { HOMEPAGE_PATH } from '../constants';\n\nconst ErrorPage = props => {\n    const error = { message: 'Page Not Found!', status: '404' };\n    const buttonName = 'Create Message';\n\n    const handleRedirectToHome = useCallback(() => props.history.replace(HOMEPAGE_PATH), []);\n\n    return <Error error={error} buttonLabel={buttonName} onClick={handleRedirectToHome} />;\n};\n\nexport default ErrorPage;","import { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from '../header';\nimport Generate from '../generate';\nimport Message from '../message';\nimport ErrorPage from '../errorPage';\nimport { HOMEPAGE_PATH } from '../constants';\n\nconst Routing = () => {\n    return <Router>\n        <Header />\n        <Switch>\n            <Route exact path={HOMEPAGE_PATH} component={Generate} />\n            <Route exact path={`${HOMEPAGE_PATH}messages/:id`} component={Message} />\n            <Route path='*' component={ErrorPage} />\n        </Switch>\n    </Router>;\n};\n\nexport default Routing;","import { useState } from 'react';\nimport './App.css';\nimport Page from './components/page';\nimport Routing from './components/router';\n\nconst App = () => {\n    const [, setRefresher] = useState();\n\n    const updateComponent = (refresher = null) => refresher && setRefresher(refresher);\n\n    return <Page shouldComponentUpdate={updateComponent}>\n        <div className='appContainer'><Routing /></div>\n    </Page>;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}